"use strict";(self.webpackChunkshop_document=self.webpackChunkshop_document||[]).push([[910],{9283:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>s,default:()=>h,frontMatter:()=>o,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"HeartBeat/change-log","title":"Update History","description":"2025/1/4 v2.1.0","source":"@site/i18n/en/docusaurus-plugin-content-docs/current/HeartBeat/change-log.md","sourceDirName":"HeartBeat","slug":"/HeartBeat/change-log","permalink":"/ShopDoc/en/HeartBeat/change-log","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":999,"frontMatter":{"sidebar_position":999},"sidebar":"MainSidebar","previous":{"title":"Parameters","permalink":"/ShopDoc/en/HeartBeat/parameter"},"next":{"title":"Sig Breath Mod","permalink":"/ShopDoc/en/category/sig-breath-mod"}}');var a=t(4848),i=t(8453);const o={sidebar_position:999},s="Update History",d={},c=[];function l(e){const n={code:"code",h1:"h1",header:"header",li:"li",p:"p",ul:"ul",...(0,i.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"update-history",children:"Update History"})}),"\n",(0,a.jsx)("hr",{}),"\n",(0,a.jsx)(n.p,{children:"2025/1/4 v2.1.0"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Added local mute function"}),"\n",(0,a.jsx)(n.li,{children:"Added a prefab for only the heart rate counter"}),"\n",(0,a.jsx)(n.li,{children:"Added optional prefabs"}),"\n",(0,a.jsxs)(n.li,{children:["Added parameters ",(0,a.jsx)(n.code,{children:"HBG/Local_Mute_Bool"})," and ",(0,a.jsx)(n.code,{children:"HBG/Local_nBeatTime"})]}),"\n",(0,a.jsx)(n.li,{children:"Unified the animator for manual and OSC"}),"\n",(0,a.jsx)(n.li,{children:"Corrected the sound range change to be linear"}),"\n",(0,a.jsxs)(n.li,{children:["Fixed an issue where the ",(0,a.jsx)(n.code,{children:"VRC Animator Play Audio"})," component was not working correctly"]}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"2024/6/16 v2.0.0"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Added 3 new heartbeat sounds"}),"\n",(0,a.jsx)(n.li,{children:"Changed the pitch to change randomly within a certain range when playing the sound source"}),"\n",(0,a.jsx)(n.li,{children:"Supported avatar scaling"}),"\n",(0,a.jsx)(n.li,{children:"Supported non-uniform scale changes of the parent object"}),"\n",(0,a.jsx)(n.li,{children:"Reduced CPU load by using Direct Blend Tree"}),"\n",(0,a.jsx)(n.li,{children:"Used Animated Animator Parameter instead of Contact for parameter calculation"}),"\n",(0,a.jsx)(n.li,{children:"Changed to directly placing the Audio Sources object"}),"\n",(0,a.jsx)(n.li,{children:"Changed and organized parameter names"}),"\n",(0,a.jsx)(n.li,{children:"Eliminated playback waiting time when loading avatars"}),"\n",(0,a.jsx)(n.li,{children:"Changed the prefab name of the OSC prefab"}),"\n",(0,a.jsx)(n.li,{children:"Changed the shader for the sound range display sphere"}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"2023/12/10 v1.0.0"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Initial release"}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(l,{...e})}):l(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>s});var r=t(6540);const a={},i=r.createContext(a);function o(e){const n=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:o(e.components),r.createElement(i.Provider,{value:n},e.children)}}}]);